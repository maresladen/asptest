<style>

th,td{
 padding: 0px 10px;
    font-size: 13px;
}


.slide-fade-enter-active {
  transition: all .3s ease;
}
.slide-fade-leave-active {
  transition: all .5s cubic-bezier(1.0, 0.5, 0.8, 1.0);
}
.slide-fade-enter, .slide-fade-leave-active {
  padding-left: 30px;
  opacity: 0;
}

</style>




<!--这是一个警告弹出框-->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="alert bg-gray">
                <h4><i class="icon fa" v-bind:class ="icoClass"></i> {{msgType}}
                </h4>
            </div>
            <div class="modal-body">
                {{msgContent}}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="$('#myModal').modal('hide')">关闭 </button>
            </div>
        </div>
    </div>
</div>

<h2>功能块管理</h2>

<div id="headControl" class="col-md-12" style="padding-bottom: 20px">
<div class="input-group">
    <input id="projectName" type="text" v-model ="proEntity.projectName" name="message" placeholder="功能块名称" class="form-control"/>
    <span class="input-group-btn">
        <button v-on:click="saveProject" class="btn btn-Default btn-flat">保存</button>
    </span>
</div>
</div>
<div id="jsDiv" class="col-md-6">
    <div class="box box-default box-solid collapsed-box">
        <div class="box-header with-border" v-bind:style="headStyle">
            <h3 class="box-title">js依赖</h3>

            <div class="box-tools pull-right">(js文件拖放到这里)
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa " v-bind:class="{'fa-plus':isplus,'fa-minus':!isplus}"></i>
                </button>
            </div>
        </div>
        <div class="box-body" style="padding: 0px 10px"> 
            <div v-for="item in jsData">
            <transition name="slide-fade">
                <div v-bind:style="bodyStyle" v-show="item.show">
                    {{item.name}}
                    <div class="box-tools pull-right">
                        <button v-on:click="item.show = !item.show"> <i class="fa fa-fw fa-remove"></i> </button>
                    </div>
                </div>
            </transition>
        </div>
        </div>
    </div>
</div>
<div id="cssDiv" class="col-md-6">
    <div class="box box-default box-solid collapsed-box">
        <div class="box-header with-border" v-bind:style="headStyle">
            <h3 class="box-title">css文件</h3>

            <div class="box-tools pull-right">(css文件拖放到这里)
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa" v-bind:class="{'fa-plus':isplus,'fa-minus':!isplus}"></i>
                </button>
            </div>
        </div>
        <div class="box-body" style="padding: 0px 10px">
            <div v-for="item in cssData">
                <transition name="slide-fade">
                    <div v-show="item.show" v-bind:style="bodyStyle">
                        {{item.name}}
                        <div class="box-tools pull-right">
                            <button v-on:click="item.show = !item.show"><i class="fa fa-fw fa-remove"></i></button>
                        </div>
                    </div>
                </transition>
            </div>
        </div>
    </div>
</div>


<script>
    $(function () {



        $('#jsDiv').on({
            dragleave: function (e) {    //拖离
                e.preventDefault();
                moveFun(jsVue,false);
            },
            drop: function (e) {  //拖后放
                e.preventDefault();
                moveFun(jsVue,false);
            },
            dragenter: function (e) {    //拖进
                e.preventDefault();
                moveFun(jsVue,true);
            },
            dragover: function (e) {    //拖来拖去
                e.preventDefault();
                moveFun(jsVue,true);
            }
        });
        $('#cssDiv').on({
            dragleave: function (e) {    //拖离
                e.preventDefault();
                moveFun(cssVue,false);
            },
            drop: function (e) {  //拖后放
                e.preventDefault();
                moveFun(cssVue,false);
            },
            dragenter: function (e) {    //拖进
                e.preventDefault();
                moveFun(cssVue,true);
            },
            dragover: function (e) {    //拖来拖去
                e.preventDefault();
                moveFun(cssVue,true);
            }
        });

        var jsbox = $('#jsDiv')[0]; //拖拽区域

        jsbox.addEventListener("drop", function (e) {
            e.preventDefault(); //取消默认浏览器拖拽效果

            var fileList = e.dataTransfer.files; //获取文件对象
            for (var i = 0; i < fileList.length; i++) {


                var tempFile = fileList[i];
                //检测文件是不是css和js
                if (tempFile.type.indexOf('javascript') === -1) {
                    console.log(tempFile.type);
                    modalmodalV.alert("警告！", "仅允许上传js文件!");
                    return;
                }

                //拖拉文件到浏览器
                var filename = tempFile.name; //文件名称
                var filesize = Math.floor((tempFile.size) / 10240);
                if (filesize > 10240) {
                    modalmodalV.alert("警告！", "单个文件大小不允许超过10兆!");
                    return;
                }
                else {
                    var noAppend =true;
                    for(var i in jsVue.jsData){
                        if(jsVue.jsData[i].name == filename){
                            if(jsVue.jsData[i].show == false ){
                                jsVue.jsData[i].show = true;
                                noAppend = false;
                                break;
                            }
                            noAppend =false;
                        }
                    }
                    if(noAppend){
                        var jsfile = { name: filename, show: true,file:tempFile};
                        jsVue.jsData.push(jsfile)
                    }
                }
            }
        }, false);

        var cssbox = $('#cssDiv')[0]; //拖拽区域
        cssbox.addEventListener("drop", function (e) {
            e.preventDefault(); //取消默认浏览器拖拽效果

            var fileList = e.dataTransfer.files; //获取文件对象
            for (var i = 0; i < fileList.length; i++) {

                var tempFile = fileList[i];
                //检测文件是不是css和js
                if (tempFile.type.indexOf('css') === -1) {
                    console.log(tempFile.type);
                    modalmodalV.alert(modalmodalV.msgTypeEnmu.warn, "仅允许上传css文件！");
                    return;
                }

                //拖拉文件到浏览器
                // var img = window.URL.createObjectURL(fileList[i]);
                var filename = tempFile.name; //文件名称
                var filesize = Math.floor((tempFile.size) / 10240);
                if (filesize > 10240) {
                    modalmodalV.alert(modalmodalV.msgTypeEnmu.warn, "单个文件大小不允许超过10兆!");
                    return;
                }
                else {
                    var noAppend =true;
                    for(var i in cssVue.cssData){
                        if(cssVue.cssData[i].name == filename){
                            if(cssVue.cssData[i].show == false ){
                                cssVue.cssData[i].show = true;
                                noAppend = false;
                                break;
                            }
                            noAppend =false;
                        }
                    }
                    if (noAppend) {
                        var cssfile = { name: filename, show: true,file:tempFile};
                        cssVue.cssData.push(cssfile)
                    }
                }
            }
        }, false);
    })

    var jsVue = new Vue({
        el: "#jsDiv",
        data: {
            jsData: [],
            isplus: true,
            headStyle :{
                background:'#d2d6de'
            },
            bodyStyle: {
                background: 'white',
                'border-top-left-radius': 0,
                'border-top-right-radius': 0,
                'border-bottom-right-radius': '3px',
                'border-bottom-left-radius': '3px',
                'padding-top': '10px',
                'padding-bottom': '10px'
            }
        },
        created: function () {
            if (this.jsData.length > 0) {
                this.isplus = false;
            }
        }
    })

    var cssVue = new Vue({
        el: "#cssDiv",
        data: {
            cssData: [],
            isplus: true,
            headStyle :{
                background:'#d2d6de'
            },
            bodyStyle : {
                background:'white',
                'border-top-left-radius': 0,
                'border-top-right-radius': 0,
                'border-bottom-right-radius': '3px',
                'border-bottom-left-radius': '3px',
                'padding-top': '10px',
                'padding-bottom': '10px'
            }

        },
        created: function () {
            if (this.cssData.length > 0) {
                this.isplus = false;
            }
        }
    })

    var modalmodalV = new Vue({
        el: '#myModal',
        data: {
            msgType: '',
            msgContent: '',
            msgTypeEnmu: { info: '提示！', warn: '警告！', error: '错误！', success: '成功！' }
        },
        computed :{
            icoClass :function(){
                return {
                    'fa-info' : this.msgType ==  this.msgTypeEnmu.info,
                    'fa-warning' : this.msgType ==  this.msgTypeEnmu.warn,
                    'fa-ban' : this.msgType ==  this.msgTypeEnmu.error,
                    'fa-check' : this.msgType ==  this.msgTypeEnmu.success,
                }
            }            
        },
        methods: {
            alert: function (msgT, msgC) {
                this.msgType = msgT;
                this.msgContent = msgC;
                $('#myModal').modal('show');
            }
        }
    })

    var modalHerdV = new Vue({
        el: '#headControl',
        data: {
            proEntity: {projectId : 0, projectName: ''},
            msgType: '警告',
            msgContent: "测试"
        },
        methods: {
            // dotest: function () {
            //     $('#myModal').modal('show');
            // },
            saveProject: function () {
                // var proEntity = {};
                // proEntity.projectName =this.proEntity.proName;
                // proEntity.projectId =2;
                // proEntity.projectMarkDown = $('#wmd-preview').html();

                var fileForm = new FormData();


                for(var i =0;i<jsVue.jsData.length;i++){
                    if(jsVue.jsData[i].show){
                         fileForm.append(jsVue.jsData[i].name,jsVue.jsData[i].file)
                    }
                }
                for(var i =0;i<cssVue.cssData.length;i++){
                    if (cssVue.cssData[i].show) {
                         fileForm.append(cssVue.cssData[i].name,cssVue.cssData[i].file)
                    }
                }



                fileForm.append('proId',this.proEntity.projectId);
                fileForm.append('proName',this.proEntity.projectName);

                if(this.proEntity.projectId == 0){
                    // this.$http.post('/Project', JSON.stringify(subData), { emulateJSON: true }).then(response => {
                    //     console.log(response.data)
                    // }, rep => {
                    //     console.log('失败')
                    // });
                    this.$http.post('/Project',fileForm).then(rep => {

                        console.log(rep.data);
                    },rep => {
                        console.log('失败')
                    })
                }
                else{
                    this.$http.put('/Project', fileForm).then(response => {
                        console.log(response.data)
                    }, rep => {
                        console.log('失败')
                    });
                }

            }
        }
    })
    


    function moveFun(theVue,isOn){
        if (isOn) {
            theVue.headStyle.background = 'wheat'
            theVue.bodyStyle.background = 'wheat'
        }
        else{
            theVue.headStyle.background = '#d2d6de'
            theVue.bodyStyle.background = 'white'
        }
    }





</script>